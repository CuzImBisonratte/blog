"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[313],{146:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"ap55c-openwrt","metadata":{"permalink":"/de/ap55c-openwrt","source":"@site/i18n/de/docusaurus-plugin-content-blog/2025-09-07-sophos-openwrt/index.mdx","title":"Flashen eines Sophos AP 55 (C) / 100 (C) mit OpenWRT","description":"Die Schule, die ich besuche, musste alle alten Access Points austauschen. Der IT-Leiter fragte zwei meiner Freunde und mich, ob wir versuchen wollten, eine Verwendung f\xfcr die alten Ger\xe4te zu finden, da er sie nicht wegwerfen wollte.","date":"2025-09-07T00:00:00.000Z","tags":[],"readingTime":10.69,"hasTruncateMarker":true,"authors":[{"name":"Konstantin Protzen","title":"Hobby-Fullstack-Dev","url":"https://github.com/cuzimbisonratte","imageURL":"/de/img/konstantin.webp","key":"konstantin","page":null}],"frontMatter":{"slug":"ap55c-openwrt","title":"Flashen eines Sophos AP 55 (C) / 100 (C) mit OpenWRT","authors":["konstantin"]},"unlisted":false,"nextItem":{"title":"Automating IR Remote Control with Raspberry Pi Pico","permalink":"/de/radiopi"}},"content":"import Tabs from \\"@theme/Tabs\\";\\nimport TabItem from \\"@theme/TabItem\\";\\n\\nDie Schule, die ich besuche, musste alle alten Access Points austauschen. Der IT-Leiter fragte zwei meiner Freunde und mich, ob wir versuchen wollten, eine Verwendung f\xfcr die alten Ger\xe4te zu finden, da er sie nicht wegwerfen wollte.  \\n\\nWir haben dar\xfcber nachgedacht und kamen auf die Idee, OpenWRT darauf zu flashen. Es hat funktioniert! Hier ist also, wie wir es gemacht haben!  \\n\\n{/* truncate */}\\n\\n:::note Zur Anleitung springen\\nDieser Blogbeitrag enth\xe4lt auch eine kurze Zusammenfassung der Schritte, die wir unternommen haben, um OpenWRT auf dem AP 55C zu flashen.  \\n\\nWenn du nur eine Anleitung m\xf6chtest, kannst du den ersten Teil \xfcberspringen und direkt zur  [Anleitung](#anleitung) kommen.  \\n:::\\n\\n## Technik & Konzept\\n\\nDer Sophos AP 55C ist ein drahtloser Access Point, der auf einer propriet\xe4ren Firmware von Sophos l\xe4uft, die bereits auf OpenWRT basiert. Das Ziel war es, die Sophos-Firmware durch eine offenere und anpassbarere Version \u2014 die Standardversion \u2014 von OpenWRT zu ersetzen.\\n\\n### Sophos AP 55 vs AP 55C\\n\\nDer Sophos AP 55C ist die f\xfcr die Decke vorgesehene Version des Sophos AP 55. W\xe4hrend der AP 55 ein f\xfcr die Wandmontage gedachtes Ger\xe4t mit externen Antennen ist, wurde der AP 55C f\xfcr eine unauff\xe4llige Deckenmontage entworfen. \\n\\nDer wichtige Unterschied ist, dass beide Ger\xe4te einen seriellen Konsolenport haben, der AP 55 jedoch einen simplen RJ45-Port f\xfcr die Konsole verwendet, w\xe4hrend der AP 55C UART-Pins im Inneren des Ger\xe4ts verwendet. Das bedeutet, dass du den AP 55C \xf6ffnen musst, um auf die Konsole zuzugreifen, w\xe4hrend der AP 55 \xfcber ein standartisiertes RJ45-Serial-Kabel nutzbar ist.\\n\\nDas bringt auch unterschiedliche Hardwareanforderungen mit sich. Der AP 55 kann mit einem normalen USB-Serial-Adapter geflasht werden, w\xe4hrend der AP 55C einen UART-Adapter ben\xf6tigt. (Wenn du ein weiteres interessantes Projekt haben m\xf6chtest, kannst du auch einen Raspberry Pi Pico als USB-UART-Br\xfccke verwenden.)\\n\\n### Konzept\\n\\nDas Ziel war es, OpenWRT anstelle der originalen Sophos-Firmware auf dem AP laufen zu lassen.  \\n\\nDaf\xfcr musste man den Bootprozess des Access Points \xfcber die serielle Konsole unterbrechen, ein OpenWRT-Image per TFTP laden und es booten. Danach wird es mit `sysupgrade` fest auf dem Ger\xe4t installiert.  \\n\\n### Ben\xf6tigte Hardware\\n\\n<Tabs groupId=\\"device\\">\\n  <TabItem value=\\"55\\" label=\\"AP 55\\">\\n    - Ein Sophos AP 55  \\n    - Ein USB-Serial RJ45-Adapter  (Ich empfehle [diesen](https://amzn.to/4meEwwE))\\n    - Ein Computer\\n    - Ein PoE-Switch or -Injector (Wir haben einen [TP-Link TL-PoE160S](https://amzn.to/42chkHW) verwendet)\\n  </TabItem>\\n  <TabItem value=\\"55c\\" label=\\"AP 55C\\" default>\\n    - Ein Sophos AP 55C  \\n    - Zwei USB-Serial UART-Adapter  (wir haben [diesen](https://amzn.to/4m8o6ps) verwendet)\\n    - Ein Computer  \\n    - Ein kleiner Schraubendreher  \\n    - Ein PoE-Switch or -Injector (Wir haben einen [TP-Link TL-PoE160S](https://amzn.to/42chkHW) verwendet)\\n\\n  </TabItem>\\n</Tabs>\\n\\n## Anleitung\\n\\nHier sind die Schritte, denen du folgen kannst, um OpenWRT auf den Sophos AP 55 (C) zu flashen.\\n\\nWie bei der Installation der meisten Betriebssysteme wirst du zuerst ein Live-Image von OpenWRT booten und dann von dort aus die Installation durchf\xfchren. Um das Live-Image zu booten, musst du das Image per TFTP laden. \\n\\n### Schritt 1: Installiere einen TFTP-Server\\n\\nZuerst ben\xf6tigst du einen TFTP-Server auf deinem Computer.\\n\\n<Tabs groupId=\\"os\\">\\n  <TabItem value=\\"windows\\" label=\\"Windows\\">\\n    Unter Windows habe ich [TFTPD64](https://pjo2.github.io/tftpd64/) als TFTP-Server gesehen. Einfach herunterladen und installieren. Dann kannst du im Programm das TFTP-Verzeichnis ausw\xe4hlen, in dem du auch das OpenWRT-Image ablegen wirst.\\n  </TabItem>\\n  <TabItem value=\\"linux\\" label=\\"Linux (debian-based)\\" default>\\n    Unter Linux haben wir `tftpd-hpa` genutzt. Du kannst es mit deinem Paketmanager installieren. Unter Ubuntu/Debian-basierten Distributionen zum Beispiel mit:\\n\\n      ```bash\\n      sudo apt-get install tftpd-hpa\\n      sudo mkdir /srv/tftp\\n      ```\\n\\n      Der Ordner `/srv/tftp` wird als TFTP-Stammverzeichnis verwendet, in dem du die OpenWRT-Initramfs-Kernel-Datei ablegen wirst.\\n  </TabItem>\\n</Tabs>\\n\\n### Schritt 2: Lade die OpenWRT-Firmware herunter\\n\\n<Tabs groupId=\\"device\\">\\n  <TabItem value=\\"55\\" label=\\"AP 55\\">\\n\\n    Als n\xe4chstes musst du die OpenWRT-Firmware f\xfcr den Sophos AP 55 herunterladen. Du findest die Firmware auf der [OpenWRT-Downloadseite](https://downloads.openwrt.org/).\\n\\n    Bitte pr\xfcfe, ob die aktuelle stabile Version eine Firmware f\xfcr den Sophos AP 55 bereitstellt. Falls nicht, kannst du auch eine \xe4ltere Version verwenden (zum Zeitpunkt des Schreibens ist 24.10.2 die neueste, die den AP 55 unterst\xfctzt).\\n\\n    Du findest die Firmware unter:\\n\\n    `ath79 -> generic -> sophos_ap55-initramfs-kernel.bin`\\n\\n    und\\n\\n    `ath79 -> generic -> sophos_ap100-initramfs-kernel.bin`\\n\\n    Lade beide Dateien herunter und lege sie in das TFTP-Stammverzeichnis, das du in Schritt 1 eingerichtet hast.\\n\\n    Benenne sie dann in `uImage_AP55` und `uImage_AP100` um. (Ohne Dateiendung)\\n\\n    :::info\\n    Der AP 55 / AP 100 verwenden nahezu die gleiche Hardware. Daher ben\xf6tigt der AP 55 manchmal die AP 100-Firmware, um ordnungsgem\xe4\xdf zu funktionieren. Lade einfach beide Firmwares herunter, um sicherzugehen, und der AP w\xe4hlt die richtige aus.\\n    :::\\n\\n  </TabItem>\\n\\n  <TabItem value=\\"55c\\" label=\\"AP 55C\\" default>\\n\\n    Als n\xe4chstes musst du die OpenWRT-Firmware f\xfcr den Sophos AP 55C herunterladen. Du findest die Firmware auf der [OpenWRT-Downloadseite](https://downloads.openwrt.org/).\\n\\n    Bitte pr\xfcfe, ob die aktuelle stabile Version eine Firmware f\xfcr den Sophos AP 55 bereitstellt. Falls nicht, kannst du auch eine \xe4ltere Version verwenden (zum Zeitpunkt des Schreibens ist 24.10.2 die neueste, die den AP 55 unterst\xfctzt).\\n\\n    Du findest die Firmware unter:\\n\\n    `ath79 -> generic -> sophos_ap55c-initramfs-kernel.bin`\\n\\n    und\\n\\n    `ath79 -> generic -> sophos_ap100c-initramfs-kernel.bin`\\n\\n    Lade beide Dateien herunter und lege sie in das TFTP-Stammverzeichnis, das du in Schritt 1 eingerichtet hast.\\n\\n    Benenne sie dann in `uImage_AP55` und `uImage_AP100` um. (Ohne Dateiendung)\\n    :::info\\n    Der AP 55 / AP 100 verwenden nahezu die gleiche Hardware. Daher ben\xf6tigt der AP 55 manchmal die AP 100-Firmware, um ordnungsgem\xe4\xdf zu funktionieren. Lade einfach beide Firmwares herunter, um sicherzugehen, und der AP w\xe4hlt die richtige aus.\\n    :::\\n\\n  </TabItem>\\n</Tabs>\\n\\n### Schritt 3: Verbinde den AP mit deinem TFTP-Server\\n\\n\\nSchlie\xdfe den AP mit einem Ethernet-Kabel an deinen Computer an, auf dem du den TFTP-Server eingerichtet hast.\\n\\n\\nSetze die IPv4-Adresse deines Computers statisch auf `192.168.99.8`. Der AP wird diese Adresse verwenden, um eine Verbindung zum TFTP-Server herzustellen. Im Folgenden findest du Anweisungen f\xfcr Windows und Ubuntu (mit Gnome). F\xfcr andere Betriebssysteme pr\xfcfe bitte die Dokumentation deines Betriebssystems.\\n\\n<Tabs groupId=\\"os\\">\\n  <TabItem value=\\"windows\\" label=\\"Windows\\">\\n\\n      Du kannst eine statische IP-Adresse im Netzwerk- und Freigabecenter festlegen. Gehe zu \\"Adaptereinstellungen \xe4ndern\\", klicke mit der rechten Maustaste auf deinen Ethernet-Adapter und w\xe4hle \\"Eigenschaften\\". W\xe4hle dann \\"Internetprotokoll Version 4 (TCP/IPv4)\\" und klicke auf \\"Eigenschaften\\". Hier kannst du die statische IP-Adresse festlegen.\\n\\n  </TabItem>\\n  <TabItem value=\\"linux\\" label=\\"Ubuntu (Gnome)\\" default>\\n\\n      Unter Ubuntu finde ich es am einfachsten, eine statische IP-Adresse \xfcber die GUI festzulegen. \xd6ffne die Einstellungen und gehe zum Abschnitt *Netzwerk*. Hier kannst du deinen Ethernet-Adapter ausw\xe4hlen und eine statische IP-Adresse festlegen.\\n\\n      Das sieht dann ungef\xe4hr so aus:\\n\\n      ![Setting up Static IPv4 Address on Ubuntu 24](./ipv4-ubuntu.png)\\n  </TabItem>\\n</Tabs>\\n\\n### Schritt 4: Verbinde dich mit der seriellen Konsole des AP\\n\\n<Tabs groupId=\\"device\\">\\n  <TabItem value=\\"55\\" label=\\"AP 55\\">\\n    Schlie\xdfe den USB-zu-Seriell RJ45-Adapter an deinen Computer und den AP an. \\n  </TabItem>\\n  <TabItem value=\\"55c\\" label=\\"AP 55C\\" default>\\n    \xd6ffne den AP 55C mit einem kleinen Schraubendreher.  \\n    Die UART-Pins (von links nach rechts, mit RJ45-Port unten) sind:  \\n\\n    ```\\n    Pin 1: VCC (3.3V) \u2014 Nicht verbinden!\\n    Pin 2: GND\\n    Pin 3: RX\\n    Pin 4: TX\\n    ```\\n\\n    Verbinde GND, RX und TX mit dem USB-Serial-Adapter. Verbinde den Adapter dann mit deinem Computer.\\n  </TabItem>\\n</Tabs>\\n\\n\\nJetzt musst du dich mit der seriellen Konsole des AP verbinden. Du kannst daf\xfcr jedes Terminalprogramm verwenden. Ich empfehle [PuTTY](https://www.putty.org/) f\xfcr Windows und `minicom` f\xfcr Linux:\\n\\n<Tabs groupId=\\"os\\">\\n  <TabItem value=\\"windows\\" label=\\"Windows\\">\\n\\n      \xd6ffne PuTTY und setze die folgenden Einstellungen:\\n\\n      - Verbindungstyp: Serial\\n      - Serielle Leitung: COMX (ersetze X durch die Nummer deines COM-Ports)\\n      - Geschwindigkeit: 115200\\n\\n      Klicke dann auf \\"Open\\", um eine Verbindung zur seriellen Konsole herzustellen.\\n\\n  </TabItem>\\n  <TabItem value=\\"linux\\" label=\\"Linux (debian-based)\\" default>\\n\\n\\n      Du kannst `minicom` und `screen` verwenden, um eine Verbindung zur seriellen Konsole herzustellen. Installiere sie zuerst, falls du das noch nicht getan hast:\\n\\n      ```bash\\n      sudo apt-get install minicom screen\\n      ```\\n\\n      Jetzt kannst du dich mit der seriellen Konsole verbinden:\\n\\n      ```bash\\n      sudo screen /dev/ttyUSB0 115200\\n      ```\\n  </TabItem>\\n</Tabs>\\n### Schritt 5: Unterbrich den Bootprozess\\n\\nStarte den AP neu. Falls er schon an den Strom angeschlossen ist, ziehe das Ethernet-Kabel ab und verbinde es wieder mit dem PoE-Switch/-Injector, um ihn neu zu starten.\\n\\nSobald Ausgabe auf der seriellen Konsole erscheint, dr\xfccke Enter, um den Bootprozess zu unterbrechen. Du solltest eine Eingabeaufforderung wie diese sehen:\\n\\n```bash\\nath>\\n```\\n\\nFalls die Ausgabe des Bootloaders unlesbar ist, lie\xdf bitte den nachfolgenden Hinweis:\\n\\n<details>\\n    <summary>Unleserliche Ausgabe auf der seriellen Konsole beheben</summary>\\n\\n    Der unleserliche Output wird h\xf6chstwahrscheinlich dadurch verursacht, dass der AP modifiziert wurde, um 7 Datenbits anstelle der standardm\xe4\xdfigen 8 Datenbits f\xfcr TX (**nicht f\xfcr RX**) zu verwenden!\\n\\n    Um dies zu beheben, musst du die RX-Leitung mit dem zweiten USB-zu-Seriell-Adapter verbinden. Die Masse (GND) muss zwischen beiden Adaptern und dem AP geteilt werden. Verbinde dann den zweiten Adapter mit deinem Computer und \xf6ffne ein zweites Terminalprogramm (PuTTY oder minicom).\\n\\n    In PuTTY kannst du die Datenbits im Abschnitt \\"Serial\\" der Einstellungen festlegen. Setze sie auf 7 Datenbits und verbinde dich mit dem zweiten Adapter.\\n\\n    Bei minicom haben wir den folgenden Befehl verwendet, um minicom mit 7 Datenbits zu starten:\\n\\n    ```bash\\n    sudo picocom -b 115200 -d 7 -p n -f n /dev/ttyUSB1\\n    ```\\n\\n    On the terminal with which you send commands to the AP, you can now type commands. The other terminal will show the output of the AP.\\n\\n    The moment the output gets garbage again, switch back to 8 bits by replacing the `-d 7` with `-d 8` in the picocom command or changing it in PuTTY.\\n\\n    Im Terminal, mit dem du Befehle an den AP sendest, kannst du jetzt Befehle eingeben. Das andere Terminal zeigt die Ausgabe des AP an.\\n\\n    Sobald die Ausgabe wieder unleserlich wird, hat der AP zu 8 Datenbits zur\xfcckgewechselt. Wechsle selber auch einfach zur\xfcck zu 8 Datenbits, indem du `-d 7` durch `-d 8` im picocom-Befehl ersetzt oder es in PuTTY \xe4nderst.\\n\\n</details>\\n\\n### Schritt 6: OpenWRT booten\\n\\nJetzt kannst du das OpenWRT-Image per TFTP laden und booten. Nutze daf\xfcr die folgenden Befehle:\\n\\n```bash\\ntftpboot\\nsetenv fwaddr 0x9f070000\\nerase $fwaddr +$filesize\\ncp.b $fileaddr $fwaddr $filesize\\niminfo $fwaddr\\n```\\n\\nDas wird den AP mit dem Image vom TFTP-Server vorbereiten. Wenn alles funktioniert, solltest du `Verifying Checksum ... OK` in der Ausgabe sehen, dann kannst du das OpenWRT-Live-System mit dem Befehl `boot` starten.\\n\\n### Schritt 7: OpenWRT installieren\\n\\nNachdem OpenWRT gebootet ist, solltest du den AP mit dem Internet verbinden, indem du das Ethernet-Kabel vom TFTP-Server in dein normales Netzwerk steckst.\\n\\nDie Konsolenverbindung wird weiterhin funktionieren, da sie \xfcber UART (AP 55C) oder einen dedizierten Konsolenport (AP 55) bereitgestellt wird.\\n\\nVer\xe4ndere danach die Netzwerkkonfiguration des AP, um DHCP zu verwenden, mit dem Texteditor `nano`:\\n\\n```bash\\nnano /etc/config/network\\n```\\n\\nErsetze darin die folgenden Zeilen:\\n\\n```diff\\nconfig interface \'lan\'\\n    option device \'br-lan\'\\n    // remove-start\\n    option proto \'static\'\\n    option ipaddr \'192.168.1.1\'\\n    option netmask \'255.255.255.0\'\\n    // remove-end\\n    // add-start\\n    option proto \'dhcp\'\\n    // add-end\\n    option ip6assign \'60\'\\n```\\n\\nUnd verbinde dich mit dem Internet \xfcber DHCP, indem du die folgenden Befehle ausf\xfchrst:\\n\\n```bash\\nservice network restart\\nping -c 1 openwrt.com\\n```\\n\\nWenn der Ping erfolgreich ist (0% Paketverlust), kannst du jetzt OpenWRT installieren, indem du den folgenden Befehl ausf\xfchrst:\\n\\n```bash\\nsysupgrade https://downloads.openwrt.org/releases/24.10.2/targets/ath79/generic/openwrt-24.10.2-ath79-generic-sophos_ap100c-squashfs-sysupgrade.bin\\n```\\n:::info\\nNutze dabei bitte die neueste Version der OpenWRT-Firmware \u2014 dieselbe Version wie das Initramfs-Kernel, das du zum Booten von OpenWRT verwendet hast.\\n\\nWie beim Initramfs-Kernel k\xf6nnte es sein, dass du die AP 100C-Firmware anstelle der AP 55C-Firmware verwenden musst. Du erkennst das daran, wenn die Installation mit einem Fehler wie *upgrade: Device sophos,ap55c not supported by this image* fehlschl\xe4gt.\\n:::\\n\\n### Schritt 8: Abschluss der Installation\\n\\nNach der Installation startet der AP neu.\\n\\nAktiviere DHCP erneut in der Netzwerk-Konfiguration.\\n\\n<details>\\n    <summary>DHCP wieder aktivieren</summary>\\n\\n    Ver\xe4ndere die Netzwerkkonfiguration des AP, um DHCP zu verwenden, mit dem Texteditor `nano`:\\n\\n    ```bash\\n    nano /etc/config/network\\n    ```\\n\\n    Ersetze darin die folgenden Zeilen:\\n\\n    ```diff\\n    config interface \'lan\'\\n        option device \'br-lan\'\\n        // remove-start\\n        option proto \'static\'\\n        option ipaddr \'192.168.1.1\'\\n        option netmask \'255.255.255.0\'\\n        // remove-end\\n        // add-start\\n        option proto \'dhcp\'\\n        // add-end\\n        option ip6assign \'60\'\\n    ```\\n\\n    und verbinde dich mit dem Internet \xfcber DHCP, indem du die folgenden Befehle ausf\xfchrst:\\n\\n    ```bash\\n    service network restart\\n    ping -c 1 openwrt.com\\n    ```\\n    Wenn der Ping erfolgreich ist (0% Paketverlust), kannst du jetzt weiter machen.\\n</details>\\n\\nFinde dann die IP-Adresse des APs mit:\\n\\n```bash\\nip a\\n```\\n\\nSetze ein Passwort f\xfcr den Benutzer `root`:\\n\\n```bash\\npasswd\\n```\\n\\nDas wird dann auch das neue Passwort f\xfcr die Weboberfl\xe4che von OpenWRT sein.\\n\\nDanach kannst du die Weboberfl\xe4che unter `http://<IP_ADDRESS_OF_YOUR_AP>/` \xf6ffnen und dich mit dem Benutzernamen `root` und deinem Passwort anmelden.\\n\\n\\nFertig \u2014 OpenWRT l\xe4uft jetzt auf deinem Sophos AP 55 (C) / 100 (C).\\n\\n## Zusammenfassung\\n\\nDie Installation von OpenWRT auf dem AP ist nicht wirklich schwer und dauert etwa 15\u201330 Minuten, je nach Erfahrung.\\n\\nDa die APs bald ihr End-of-Life bei Sophos erreichen, findet man viele davon g\xfcnstig auf Kleinanzeigen oder eBay. F\xfcr 20\u201330 \u20ac bekommt man damit einen PoE-f\xe4higen Access Point mit ordentlicher Leistung.\\n\\nIch hoffe, dir hat dieser Blogbeitrag gefallen \u2014 vielleicht betreibst du ja bald auch freie Software auf deinen Ger\xe4ten.\\n\\nDanke an meine Mitsch\xfcler, die an diesem Projekt mitgearbeitet haben, und danke an den IT-Leiter meiner [Schule](https://lls-bad.de), der uns die Hardware zur Verf\xfcgung gestellt hat. Auch danke an [dieses Tutorial](https://forum.openwrt.org/t/howto-installing-openwrt-on-sophos-ap-55-and-ap-100), das einen guten Ausgangspunkt und eine Basis f\xfcr dieses Projekt geboten hat.\\n\\n**Und zum Schluss, danke dir f\xfcrs Lesen!**"},{"id":"radiopi","metadata":{"permalink":"/de/radiopi","source":"@site/i18n/de/docusaurus-plugin-content-blog/2024-10-31-radiopi/index.md","title":"Automating IR Remote Control with Raspberry Pi Pico","description":"I own a Music-System that is controlled by an IR-Remote. As I use it as a Speaker for my Computer I have to turn it on manually every time I want to use it. So I thought about automating the process with a Raspberry Pi Pico.","date":"2024-10-31T00:00:00.000Z","tags":[],"readingTime":5.44,"hasTruncateMarker":true,"authors":[{"name":"Konstantin Protzen","title":"Hobby-Fullstack-Dev","url":"https://github.com/cuzimbisonratte","imageURL":"/de/img/konstantin.webp","key":"konstantin","page":null}],"frontMatter":{"slug":"radiopi","title":"Automating IR Remote Control with Raspberry Pi Pico","authors":["konstantin"]},"unlisted":false,"prevItem":{"title":"Flashen eines Sophos AP 55 (C) / 100 (C) mit OpenWRT","permalink":"/de/ap55c-openwrt"},"nextItem":{"title":"Replacing XAMPP under Ubuntu","permalink":"/de/xampp-replacement"}},"content":"I own a Music-System that is controlled by an IR-Remote. As I use it as a Speaker for my Computer I have to turn it on manually every time I want to use it. So I thought about automating the process with a Raspberry Pi Pico.\\n\\n\x3c!-- truncate --\x3e\\n\\n:::warning Translation missing | \xdcbersetzung fehlt\\nThis article has not yet been translated into German. Sorry!\\n\\nDieser Artikel wurde noch nicht ins Deutsche \xfcbersetzt. Entschuldigung!\\n:::\\n\\n## The Tech\\n\\nThe Music System is a PEAQ 310BT-SL. On the remote there is no part number or anything, so I can\'t really tell you what remote it is. But it is the one that comes with the Music System.  \\nThe Pi I use for this project is a Raspberry Pi Pico W. I chose the Pico because it is small and also I wanted to learn micropython.\\n\\n## Proof of Concept\\n\\nI started knowing nothing about the remote and how IR even works. But I knew that I can look through a camera and if the remote is working I can see the IR-LED lighting up. So I did that and saw the LED lighting up. So I knew that the remote is using IR.\\n\\n### Hardware setup\\n\\nI use a IR-Receiver on a board that has the output pins labelled as G, R and Y. The G pin is connected to the GND pin on the Pico, the R pin is connected to the 3V3 pin on the Pico and the Y pin is connected to pin 16 on the Pico.\\n\\n### Reading the Codes\\n\\nThen I looked around to find out how IR works on a Pi pico and found the following library: [Github: peterhinch/micropython_ir](https://github.com/peterhinch/micropython_ir). I installed it on the pi using Thonny and then used the code from the [receiver documentation](https://github.com/peterhinch/micropython_ir/blob/master/RECEIVER.md) to find out the used protocol:\\n\\n```python\\nfrom ir_rx.test import test\\nfrom ir_rx.acquire import test\\ntest()\\n```\\n\\nAfter 2 tries I found out that the remote uses the NEC protocol. I didn\'t know whether NEC_8 or NEC_16 is used, but I just tried NEC_8 - that didn\'t work. So I tried NEC_16 and that worked. So I knew that the remote uses the NEC_16 protocol.\\n\\nThen I used the following code to get the codes from the remote:\\n\\n```python\\nimport time\\nfrom machine import Pin\\nfrom ir_rx.nec import NEC_16  # NEC remote, 8 bit addresses\\n\\ndef callback(data, addr, ctrl):\\n    if data < 0:  # NEC protocol sends repeat codes.\\n        print(\'Repeat code.\')\\n    else:\\n        print(\'Data {:02x} Addr {:04x}\'.format(data, addr))\\n\\nir = NEC_16(Pin(16, Pin.IN), callback)\\nwhile True:\\n    time.sleep_ms(500)\\n```\\n\\n#### Codes from the Remote\\n\\nThe Adress given by the remote is always 0401. The Data is different for every button. Here are the codes I got:\\n\\n<details>\\n<summary>Table of the Codes</summary>\\n\\n| Button        | Data |\\n| ------------- | ---- |\\n| Power         | 04   |\\n| Eject Disk    | 08   |\\n| Menu          | 47   |\\n| 10-           | 4B   |\\n| Volume +      | 4C   |\\n| 10+           | 4D   |\\n| Back          | 4E   |\\n| Play/Pause    | 4F   |\\n| Forward       | 50   |\\n| Fold -        | 51   |\\n| Volume -      | 52   |\\n| Fold +        | 53   |\\n| Sleep Timer   | 54   |\\n| Intro         | 55   |\\n| Info          | 56   |\\n| Switch Source | 57   |\\n| EQ            | 59   |\\n| Stop          | 5A   |\\n| Prog          | 5B   |\\n| Show clock    | 5D   |\\n| Mute          | 5E   |\\n\\n</details>\\n\\n### Sending the Codes\\n\\nI used the following code to send the codes:\\n\\n```python\\nfrom machine import Pin\\nfrom ir_tx.nec import NEC\\n\\naddr = 0x0401\\ndata = 0x5E\\n\\nnec = NEC(Pin(17, Pin.OUT, value = 0))\\nnec.transmit(addr, data)\\n```\\n\\nAnd e\' voila, the Music System toggled the mute Function.\\n\\n## Making it a real working Project\\n\\nAfter knowing that the method I used works, I wanted to write a full on remote control.\\n\\nMy requirements were that I wanted to be able to trigger any command recorded from the remote via HTTP-Requests.  \\nUsing the micopython libraries `socket` and `network` I wrote the code to listen for HTTP-Requests and then send the corresponding IR-Code.\\n\\nAlso I wanted to have two other endpoints:  \\nOne to turn on the Music System, then switch to the correct source and then turn up the volume to maximum,\\nand one command to just turn up the volume to maximum.\\n\\nYou can find the full code on my [GitHub](https://github.com/CuzImBisonratte/RadioPi) or also here:\\n\\n<details>\\n<summary>Full Code</summary>\\n\\n```python\\n# Settings\\nADDR = 0x0401\\nDATA = {\\n    \\"power\\": 0x04,\\t\\"eject\\": 0x08,      \\"menu\\": 0x47,\\n    \\"10dwn\\": 0x4B,\\t\\"volUp\\": 0x4C,\\t    \\"10up\\": 0x4D,\\n    \\"back\\": 0x4E,\\t\\"pause\\": 0x4F,\\t    \\"frwd\\": 0x50,\\n    \\"foldDwn\\": 0x51,    \\"volDwn\\": 0x52,\\t    \\"foldUp\\": 0x53,\\n    \\"sleep\\": 0x54,\\t\\"intro\\": 0x55,\\t    \\"info\\": 0x56,\\n    \\"src\\": 0x57,\\t\\"eq\\": 0x59,\\t    \\"stop\\": 0x5A,\\n    \\"prog\\": 0x5B,\\t\\"clock\\": 0x5D,\\t    \\"mute\\": 0x5E\\n}\\nWIFI_SSID=\\"\\"\\nWIFI_PASS=\\"\\"\\n\\n# Libraries\\nimport time\\nimport socket\\nimport network\\nfrom machine import Pin\\nfrom ir_tx.nec import NEC\\n\\n# Network Stuff\\nnetwork.country(\'DE\')\\nwlan = network.WLAN(network.STA_IF)\\nwlan.active(True)\\nwlan.config(pm = 0xa11140) # Disable WiFi Standby\\nwlan.connect(WIFI_SSID, WIFI_PASS)\\n\\n# Webserver (API)\\naddr = socket.getaddrinfo(\'0.0.0.0\', 80)[0][-1]\\nserver = socket.socket()\\nserver.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\\nserver.bind(addr)\\nserver.listen(1)\\n\\n# Connect to wifi\\nwhile not wlan.isconnected() and wlan.status() >= 0:\\n    time.sleep(1)\\n\\n# Setup IR Blaster\\nnec = NEC(Pin(17, Pin.OUT, value = 0))\\n\\n# Webserver\\nwhile True:\\n    try:\\n        # Accept traffic\\n        conn, addr = server.accept()\\n        print(\'HTTP-Request von Client\', addr)\\n        request = conn.recv(1024)\\n        # Handle request\\n        request = str(request)\\n        request = request.split()\\n        if \\"/cmd/\\" in request[1]:\\n            cmd = request[1].replace(\\"/cmd/\\", \\"\\")\\n            print(cmd)\\n            if cmd in DATA:\\n                conn.send(\'HTTP/1.0 200 OK\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n\')\\n                conn.send(\'{\\"success\\":true,\\"cmd\\":\\"\'+cmd+\'\\"}\')\\n                # Send IR Command\\n                nec.transmit(ADDR, DATA[cmd])\\n            else:\\n                conn.send(\'HTTP/1.0 404 NOT FOUND\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n\')\\n                conn.send(\'{\\"cmd\\":\\"Not found\\"}\')\\n        # Custom command for max vol\\n        elif request[1] == \\"/volMax\\":\\n            for i in range(32):\\n                nec.transmit(ADDR, DATA[\\"volUp\\"])\\n                time.sleep(0.3)\\n            conn.send(\'HTTP/1.0 200 OK\\\\r\\\\n\\\\r\\\\n\')\\n        # Custom command for startup sequence\\n        elif request[1] == \\"/init\\":\\n            conn.send(\'HTTP/1.0 200 OK\\\\r\\\\n\\\\r\\\\n\')\\n            nec.transmit(ADDR, DATA[\\"power\\"])\\n            time.sleep(7.5)\\n            for i in range(4):\\n                nec.transmit(ADDR, DATA[\\"src\\"])\\n                time.sleep(1)\\n            time.sleep(5)\\n            for i in range(32):\\n                nec.transmit(ADDR, DATA[\\"volUp\\"])\\n                time.sleep(0.3)\\n        else:\\n            conn.send(\'HTTP/1.0 404 NOT FOUND\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n\')\\n            conn.send(\'{\\"cmd\\":\\"Not found\\"}\')\\n        conn.close()\\n    except OSError as e:\\n        break\\n    except (KeyboardInterrupt):\\n        break\\n```\\n\\n</details>\\n\\nIt logs into the home wifi and then listens for HTTP-Requests on port 80.\\nAny command recorded can be run by sending a GET request to `/cmd/<COMMAND>`.\\n\\n## Conclusion\\n\\nReplacing a remote with a Raspberry Pi Pico is a fun project and also very useful.  \\nThe cost of everything (Pico, IR-Receiver, Wires) was around 5\u20ac, so it is also very cheap.\\n\\nI hope you enjoyed this blog post and maybe you will also try to automate your remote controlled devices.\\n\\n**Thanks for reading!**"},{"id":"xampp-replacement","metadata":{"permalink":"/de/xampp-replacement","source":"@site/i18n/de/docusaurus-plugin-content-blog/2024-08-01-xampp-replacement/index.md","title":"Replacing XAMPP under Ubuntu","description":"Hi,","date":"2024-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"XAMPP","permalink":"/de/tags/xampp","description":"A web server solution package"},{"inline":false,"label":"Nginx","permalink":"/de/tags/nginx","description":"A web server like Apache"},{"inline":false,"label":"PHP","permalink":"/de/tags/php","description":"Server-Side Scripting Language"},{"inline":false,"label":"SQL","permalink":"/de/tags/sql","description":"Query Language for Databases"},{"inline":false,"label":"phpMyAdmin","permalink":"/de/tags/pma"},{"inline":false,"label":"MySQL","permalink":"/de/tags/mysql"},{"inline":false,"label":"MariaDB","permalink":"/de/tags/maria-db","description":"Replacement for a MySQL-Server"}],"readingTime":9.3,"hasTruncateMarker":true,"authors":[{"name":"Konstantin Protzen","title":"Hobby-Fullstack-Dev","url":"https://github.com/cuzimbisonratte","imageURL":"/de/img/konstantin.webp","key":"konstantin","page":null}],"frontMatter":{"slug":"xampp-replacement","title":"Replacing XAMPP under Ubuntu","authors":["konstantin"],"tags":["xampp","nginx","php","sql","phpmyadmin","mysql","mariadb"]},"unlisted":false,"prevItem":{"title":"Automating IR Remote Control with Raspberry Pi Pico","permalink":"/de/radiopi"},"nextItem":{"title":"Welcome","permalink":"/de/welcome"}},"content":"Hi,  \\nwhilst sitting on a train, I thought about finally setting up an alternative to XAMPP as that really only works on Windows and I switched to Linux a few months ago.\\n\\n\x3c!-- truncate --\x3e\\n\\n:::warning Translation missing | \xdcbersetzung fehlt\\nThis article has not yet been translated into German. Sorry!\\n\\nDieser Artikel wurde noch nicht ins Deutsche \xfcbersetzt. Entschuldigung!\\n:::\\n\\n## But why?\\n\\nI wanted to have a local server running on my machine to test some things and I didn\'t want to use Docker for that.  \\nI also didn\'t want to use XAMPP as even though it is available for Linux, it is not really as easy to use and because my servers all run on Linux, I wanted to have a similar environment on my local machine.\\n\\nSo in this blog-tutorial-explanation-whatever I will tell you step-by-step what I did to set up a local server on my machine.\\n\\nI use NGINX as my web server, because it is faster than Apache and I am used to it and therefore all my servers run NGINX. As a database I use MariaDB, because it is a easy to use software and again I already use it on my servers. For PHP I\'ll use PHP-FPM and for managing the Databases PHPMyAdmin.\\n\\n## Install all software\\n\\nTo setup all needed software just run the following command:\\n\\n```bash\\nsudo apt install nginx mariadb-server php-fpm php-mysql php-mbstring unzip\\n```\\n\\nWhilst installing the version number of PHP chosen will be shown multiple times, write it down, as you\'ll need it later. If you didn\'t already see it whilst installing, you can also query the version by running `php -v` (Only the first two parts of the version number will be needed - like \\"8.3\\")\\n\\n### Setup of NGINX\\n\\nTo setup multiple projects you could use differnt local hostnames, but I really like just using ports on localhost for different projects as it is one less step to setup.\\n\\nFor each of your projects create a file in the directory `/etc/nginx/sites-available/` and paste the following configuration file:\\n\\n```yaml title=\\"/etc/nginx/sites-available/projectname\\"\\nserver {\\n\\n        // highlight-start\\n        # Choose a port you like\\n        listen 8081;\\n        listen [::]:8081;\\n        // highlight-end\\n\\n        server_name localhost;\\n\\n        // highlight-start\\n        # Point to where the files you want to serve are\\n        root /var/www/projectName;\\n        // highlight-end\\n        index index.php index.html;\\n\\n        location ~ \\\\.php$ {\\n                include snippets/fastcgi-php.conf;\\n\\n                // highlight-start\\n                # Set the PHP-Version by replacing \\"8.3\\"\\n                fastcgi_pass unix:/run/php/php8.3-fpm.sock;\\n                // highlight-end\\n        }\\n\\n        location / {\\n                try_files $uri $uri/ =404;\\n        }\\n}\\n```\\n\\nAfter pasting set all values as you like where comments are (highlighted above).\\n\\nNow you need to link the file to activate it (and reload nginx) by running:\\n\\n```bash\\nsudo ln -s /etc/nginx/sites-available/projectName /etc/nginx/sites-enabled/\\nsudo systemctl reload nginx\\n```\\n\\n:::note Why the weird linking system?\\nThis _weird_ linking system makes it easy to deactivate a page when something goes wrong. The link to sites-enabled can just be deleted, whilst the original config file still stays the same. Therefore when the problem is solved, the link can just be re-applied and the configuration does not need to be rewritten.\\n:::\\n\\n### Setup of PHP\\n\\nWe need to enable the mysql extension for PHP as it will be needed for PHPMyAdmin.\\n\\nTo do that you need to edit the PHP-Configuration-File (Don\'t forget to replace with your Version-Number!):\\n`sudo nano /etc/php/8.3/fpm/php.ini`\\n\\nNow you need to find the line containing `extension=mysqli`. If you use nano for editing just press CTRL+w and enter `;extension=mysqli`.\\n\\nThen you need to remove the comment char from the start (remove the Semicolon)\\n\\nDo the same for the `mbstring`-extension too.\\n\\nAfter that, you just need to reload PHP by running:\\n\\n```bash\\nsudo systemctl reload php8.3-fpm\\n```\\n\\n### Setup of MariaDB\\n\\n:::info\\nThe current versions of MariaDB sometimes have problems with authenticating the root user after installation. First, try the following steps normally, but if you have problems with the root user, you can find a solution here:\\n\\n<details>\\n        <summary>Solution to fix `Access denied for user \'root\'@\'localhost\'`</summary>\\n\\n        If the root user can\'t authenticate, you can try to reset the root password by first forcing a MariaDB-Monitor (Like a SQL-Shell) to open by running:\\n        ```bash\\n        sudo mysql\\n        ```\\n        And then running the following SQL-Command:\\n        ```sql\\n        ALTER USER \'root\'@\'localhost\' IDENTIFIED VIA mysql_native_password USING PASSWORD(\'\');\\n        ```\\n        After that you can exit the MariaDB-Monitor by entering `exit` and then you can try to login with the root user again.\\n\\n</details>\\n:::\\n\\nMariaDB comes with a configuration assistant, that makes the first steps easier. To use it run the following command:\\n\\n```bash\\nmysql_secure_installation\\n```\\n\\nNow there will be many questions asked, the following are my recommended settings:\\n\\n-   You will be asked for the root password. Press Enter to continue (there is no password yet).\\n-   You will be asked if you want to change authentication method. Enter **n** and press Enter to continue.\\n-   You will be asked if you want to set a root password. Enter **n** and press Enter to continue.\\n-   You will be asked if you want to remove anonymous users. Enter **y** and press Enter to continue.\\n-   You will be asked if you want to disallow root login remotely. Enter **y** and press Enter to continue.\\n-   You will be asked if you want to remove the test database and access to it. Enter **y** and press Enter to continue.\\n-   You will be asked if you want to reload privilege tables now. Enter **y** and press Enter to continue.\\n\\nNow I recommend setting a password for the root account, to do that you will need to open the MariaDB-Monitor (which is like a SQL Shell) by running\\n\\n```bash\\nmysql -u root\\n```\\n\\nand in there you can run the following SQL-Command to set the root-user-Password:\\n\\n```sql\\nALTER USER \'root\'@\'localhost\' IDENTIFIED VIA mysql_native_password USING PASSWORD(\'<YOUR-PASSWORD>\');\\n```\\n\\nafter that you exit the MariDB-Monitor by entering `exit`.\\n\\n:::warning\\nEven though remote root access is disabled it is a good idea to deny all access to the database server by denying the port in the firewall. If you are using UFW (Which is the default firewall for ubuntu), you can just run the following command:\\n\\n```bash\\nsudo ufw deny 3306\\nsudo ufw enable\\n```\\n\\n:::\\n\\n### Setup of PHPMyAdmin\\n\\nTo install PHPMyAdmin you need to first download it by navigating to [phpmyadmin.net](https://www.phpmyadmin.net/) and then pressing the green download button in the top right corner. This will download PHPMyAdmin.\\n\\nNow navigate to your Downloads and unzip it by running:\\n\\n```bash\\nunzip FILENAME.zip\\n```\\n\\nAfter it unzipped, you need to move to folder:\\n\\n```bash\\nsudo mv FOLDER /var/www/phpmyadmin\\n```\\n\\nAfter that you will need to set the owner of the PHPMyAdmin-Directory to the nginx user so PHPMyAdmin can write there. You can do that by running:\\n\\n```bash\\nsudo chown www-data:www-data -R /var/www/phpmyadmin\\n```\\n\\nNow you will just need to create a NGINX-configuration file for PHPMyAdmin as in the Section [Setup of NGINX](#setup-of-nginx):\\n\\n```yaml title=\\"/etc/nginx/sites-available/phpmyadmin\\"\\nserver {\\nlisten 3333;\\nlisten [::]:3333;\\n\\nserver_name localhost;\\n\\nroot /var/www/phpmyadmin;\\nindex index.html index.php;\\n\\nlocation ~ \\\\.php$ {\\ninclude snippets/fastcgi-php.conf;\\nfastcgi_pass unix:/run/php/php8.3-fpm.sock;\\n}\\n\\nlocation / {\\ntry_files $uri $uri/ =404;\\n}\\n}\\n```\\n\\n:::warning\\nDo not forget to set the PHP-Version and (if wanted) another Port AND to link the file to sites-enabled and reload NGINX as in the Section [Setup of NGINX](#setup-of-nginx)\\n\\nIf you don\'t want PHPMyAdmin to be accessible from other devices I strongly recommend denying it in your firewall by running:\\n\\n```bash\\nsudo ufw deny 3333\\nsudo ufw reload\\nsudo ufw enable\\n```\\n\\n:::\\n\\n## That\'s it\\n\\nNow everything is set up to work, just restart all services by just following the rest of the tutorial or by running the following commands:\\n\\n```bash\\nsudo systemctl reload nginx\\nsudo systemctl reload php8.3-fpm\\nsudo systemctl restart mariadb\\n```\\n\\n## Further setup\\n\\nFor easier development (and full functionality) I still recommend taking some quick steps:\\n\\n### Shortcut-Commands\\n\\nAs you may use your device not only for development you may want to be able to turn on or off all services quickly.\\n\\nFor that you need to first disable them starting at system startup:\\n\\n```bash\\nsudo systemctl disable nginx\\nsudo systemctl disable mariadb\\nsudo systemctl disable php8.3-fpm\\n```\\n\\nAnd then you can add a bash shortcut to make it easy to stop and start these services. You do that by appending the following to the .bash_aliases file (e.g. using `nano ~/.bash_aliases`):\\n\\n```bash title=\\"~/.bash_aliases\\"\\n# Development services\\nalias devon=\\"sudo systemctl start php8.3-fpm && sudo systemctl start nginx && sudo systemctl start mariadb\\"\\nalias devoff=\\"sudo systemctl stop php8.3-fpm && sudo systemctl stop nginx && sudo systemctl stop mariadb\\"\\n```\\n\\nAfter re-opening the terminal (or running `source ~/.bash_aliases`), you can use the commands `devon` and `devoff` to turn on or off your services easily.\\n\\n### Finish PHPMyAdmin Setup\\n\\nAll of the following changes will need you to change something in the PHPMyAdmin configuration found under `/var/www/phpmyadmin/config.inc.php`. This _tutorial_ will not contain every step but just which variable to fill to shorten it a bit.\\n\\nFirst you will need to copy the sample configuration file to the actual configuration file by running:\\n\\n```bash\\nsudo cp /var/www/phpmyadmin/config.sample.inc.php /var/www/phpmyadmin/config.inc.php\\n```\\n\\nFrom now on you can edit the configuration file by running:\\n\\n```bash\\nsudo nano /var/www/phpmyadmin/config.inc.php\\n```\\n\\n#### Blowfish-Secret\\n\\nThe blowfish secret is a key used for encryption of the session cookies. You should set it in the configuration.\\n\\n1. Generate a 32-bit secret by running\\n\\n```bash\\nphp -r \'echo bin2hex(random_bytes(32)) . PHP_EOL;\'\\n```\\n\\n2. Set the config variable `$cfg[\'blowfish_secret\']` in the following format:\\n\\n```\\n$cfg[\'blowfish_secret\'] = sodium_hex2bin(\'f16ce59f45714194371b48fe362072dc3b019da7861558cd4ad29e4d6fb13851\');\\n```\\n\\n#### Configuration Storage\\n\\nSetting up configuration storage is a little bit more complicated.\\n\\nYou will need access to the sql directory within the phpmyadmin directory, so i recommend copying it to a user-accessible folder: `sudo cp -r /var/www/phpmyadmin/sql ~/`\\n\\nAfter that open the MariaDB-Monitor by running `mysql -u root -p` and entering the password set at [Setup of MariaDB](#setup-of-mariadb).\\n\\nThen run the following command to create a new user called `pma` which is the control user for PHPMyAdmin (replace the `###PASSWORD###` with a new password for the control user):\\n\\n```sql\\nCREATE USER \'pma\'@\'localhost\' IDENTIFIED VIA mysql_native_password USING PASSWORD(\'###PASSWORD###\');GRANT ALL PRIVILEGES ON *.* TO \'pma\'@\'localhost\' REQUIRE NONE WITH GRANT OPTION MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;\\n```\\n\\nThen you will need to add the highlighted lines to the config:\\n\\n```php title=\\"/var/www/phpmyadmin/config.inc.php\\"\\n$i++;\\n/* Authentication type */\\n$cfg[\'Servers\'][$i][\'auth_type\'] = \'cookie\';\\n/* Server parameters */\\n$cfg[\'Servers\'][$i][\'host\'] = \'localhost\';\\n$cfg[\'Servers\'][$i][\'compress\'] = false;\\n$cfg[\'Servers\'][$i][\'AllowNoPassword\'] = false;\\n// highlight-start\\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'###PASSWORD###\';\\n// highlight-end\\n```\\n\\nTo finish the setup you will need to import the tables for the configuration storage by running the following command:\\n\\n```bash\\nmysql -u root -p < ~/sql/create_tables.sql\\n```\\n\\nIt will ask for the password of the root user and then import the tables.\\n\\nThat\'s it, you now have a fully working PHPMyAdmin setup.\\n\\n#### Theming PHPMyAdmin\\n\\nAs I really like dark themes I always change the theme of PHPMyAdmin to a dark one. You can download themes from the [PHPMyAdmin-Theme-Repository](https://www.phpmyadmin.net/themes/) and then just extract them to the `/var/www/phpmyadmin/themes` directory.\\n\\n## Conclusion\\n\\nThat\'s it, you now have a fully working local server setup on your machine. I hope this tutorial was helpful and you can now easily develop your projects locally.\\n\\nThanks for reading :)"},{"id":"welcome","metadata":{"permalink":"/de/welcome","source":"@site/i18n/de/docusaurus-plugin-content-blog/2024-07-07-welcome/index.md","title":"Welcome","description":"Hi,","date":"2024-07-07T00:00:00.000Z","tags":[{"inline":false,"label":"ShareSimple","permalink":"/de/tags/sharesimple","description":"Simple and Easy-to-Use File-Sharing Service"},{"inline":false,"label":"Noten-App","permalink":"/de/tags/notenapp"},{"inline":false,"label":"OSLeM","permalink":"/de/tags/oslem","description":"OSLeM - OpenSource Legacy Manager"},{"inline":false,"label":"PresentStat","permalink":"/de/tags/presenstat","description":"Interactive polls in presentations"}],"readingTime":4.975,"hasTruncateMarker":true,"authors":[{"name":"Konstantin Protzen","title":"Hobby-Fullstack-Dev","url":"https://github.com/cuzimbisonratte","imageURL":"/de/img/konstantin.webp","key":"konstantin","page":null}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["konstantin"],"tags":["sharesimple","notenapp","oslem","presentstat"]},"unlisted":false,"prevItem":{"title":"Replacing XAMPP under Ubuntu","permalink":"/de/xampp-replacement"}},"content":"Hi,  \\nwelcome to this blog! This is the first post.\\n\\nI will be writing about various topics, including programming, software development, and other things.\\nAnd I will be sharing my thoughts and experiences with you.\\n\\n\x3c!-- truncate --\x3e\\n\\n:::warning Translation missing | \xdcbersetzung fehlt\\nThis article has not yet been translated into German. Sorry!\\n\\nDieser Artikel wurde noch nicht ins Deutsche \xfcbersetzt. Entschuldigung!\\n:::\\n\\n## Who am I?\\n\\nFree-time programmer, interested in programming, software development and other IT-related-things.  \\nI am currently working on several projects, most of which are open source.\\n\\nMy hometown is in Germany and I am currently still going to school.\\n\\n## What am I working on currently?\\n\\n### Sharesimple\\n\\nSharesimple is the most used project I am currently working on.\\nIt is a file sharing service that allows you to share files with others without having to register.\\n\\nThe idea behind it is to make file sharing as easy as possible, without any hassle.\\n\\nSo I asked myself how it would be possible to share files without having to sign up and still not have to worry about storage limits as the host.\\n\\nThe answer was simple, just limit the file size and the time the file is available.\\nSince I, as the hosting party, can see how many files are stored on the server and how much space they take up, I can easily estimate how much of the possible storage space will be used in the future and therefore limit the file size accordingly.\\n\\nThe project is fully open source and can be found on [GitHub](https://github.com/sharesimple).\\n\\nSo far the project has been well received and I am very happy about that.\\n\\nI am currently planning to add many new features to the project.\\nMy idea is to write an admin panel for the project, so that the hosting party can easily manage the files and see how much space is being used. It should also be possible to configure the service through the admin panel.  \\nAnother feature I am planning is to allow direct WebRTC file sharing, so that the files are not stored on the server, but are transferred directly from the sender to the receiver via WebRTC, with the help of an intermediary server that only establishes the connection and protects the privacy of the sender and receiver.\\n\\nThe last feature would include a new desktop client, which would necessarily include a new backend, as the current backend is not designed for external clients.  \\nI am not sure whether to write this as a PWA, which would be the easiest way to make it available on all platforms and would also be the easiest way for me to write it, or try to learn new languages and write it in one language so that it can be a native application on a limited number of platforms.\\n\\n### Noten-App\\n\\nNoten-App is a project I started a few years ago, but never really finished.\\n\\nIt is an app which allows Students to manage their grades and calculate their average grade. It also includes features like a homework planner.\\n\\nThe app sadly is really buggy and outdated, so I am planning to do a complete rewrite of the app if I find the time to do so, but in the meantime I am not working on it, which is sad because I think it is a really useful app, but there are more important things to do for me.\\n\\n### OSLeM\\n\\nOSLeM is a new project for me, which leads me to get more into server-side programming in Node.js.\\n\\nIt is a project that is supposed to make it easy to manage your digital Legacy and to make sure that your data is not lost when you die, but is still protected from unauthorized access.\\n\\nThe project is still in the planning phase.\\n\\nMy idea is to write a server that stores the data and encrypts it in a way it can be decrypted only by the person who leaves the data behind OR by a person who has the decryption key or even require multiple peoples keys to decrypt the data.\\n\\nThe project is also planned to be open source.\\n\\nI also think about making it not only a web-app but also write a desktop client for it, so that the data can be accessed offline and the user can be sure that the data is not stored on a public-facing server, but the Legacy can also be managed by and be provided to a person that is not comfortable with using a web-app for this purpose.\\n\\n### PresentStat\\n\\nThe last project I want to write about is PresentStat.\\n\\nPresentStat is a project that is supposed to make it easy to put interactive statistics into your presentations.\\n\\nThe project has a running prototype which is not yet ready for production, but I plan to release it when I find time for it.  \\nAs it is not a project that is very important to me, I only work on it when I have nothing else to do.\\n\\nThe project-prototype is also open source and can be found on [GitHub](https://github.com/cuzimbisonratte/presentstat).\\n\\nMy idea is to make it possible to create interactive statistics in your presentations, so that the audience can interact with the statistics and see immediately how the statistics change when the data changes.\\n\\nThe biggest feature I am currently planning is to make it possible for the server to stream automatically to YouTube, because some presentation softwares (e.g. Keynote on iPad) do not allow a Web-Page to be embedded into the presentation, but allow a video-stream to be embedded, so the only way to show the statistics would be to stream the statistics to YouTube and then embed the YouTube stream into the presentation.  \\nBut as that would be a very complex feature to code and switching to another window on the presenters computer is not really that hard, I am not sure if I will ever implement this feature."}]}}')}}]);